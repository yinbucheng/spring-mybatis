spring:
  jmx:
    enabled: false
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    schema: classpath:db/schema-h2.sql
    data: classpath:db/data-h2.sql
    url: jdbc:mysql://127.0.0.1:3306/yinchong?serverTimezone=GMT%2B8
    username: root
    password: introcks1234
  data:
    elasticsearch:
      cluster-name: elasticsearch #默认即为 elasticsearch
      cluster-nodes: 127.0.0.1:9300
    mongodb:
      uri: mongodb://127.0.0.1:27017/test
      username: ""
      password: ""
  redis:
    host: 127.0.0.1
    pool: 5
    password: ""





# Logger Config
logging:
  level:
    com.baomidou.mybatisplus.samples.quickstart: debug
mybatis-plus:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: cn.bucheng.authmanager.*.*
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 2
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #mp2.3+ 全局表前缀 mp_
    #table-prefix: mp_
    #刷新mapper 调试神器
    #refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    # Sequence序列接口实现类配置
    key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 1
    logic-not-delete-value: 0
    #    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
  #    meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'


#读取inputsream阻塞时间
fdfs:
  connect-timeout: 600
  so-timeout: 1500
  #tracker地址
  trackerList: 192.168.40.30:22122
  #通过nginx 访问地址
  #fdfs.webServerUrl=http://192.168.111.130:8888/
  #缩略图配置
  thumbImage:
    height: 150
    width: 150
  #通过nginx 访问地址
  resHost: 192.168.40.30
  storagePort: 8888
  #获取连接池最大数量
  pool.max-total: 200
server:
  port: 8090
  servlet:
    context-path:



